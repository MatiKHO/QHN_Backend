generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AllEvents {
  event_id        String            @id
  name            String?
  url             String?
  start_time      String?
  start_date      String?
  end_time        String?
  end_date        String?
  duration        String?
  venue_name      String?
  venue_address   String?
  longitude       String?
  latitude        String?
  summary         String?
  is_online_event String?
  tickets_url     String?
  tags            String?
  data_source     String?
  image           String?
  age_range       String?
  min_age         Int?
  max_age         Int?
  AllEventsToUser AllEventsToUser[]

  @@map("all_events")
}

model User {
  id              String            @id @default(uuid()) @db.Uuid
  fullName        String
  email           String            @unique
  password        String
  age             Int?
  createdAt       DateTime?         @default(now())
  updatedAt       DateTime?         @updatedAt
  isAdmin         Boolean?          @default(false)
  isDisabled      Boolean?          @default(false)
  location        String?
  role            Role?             @default(CUSTOMER)
  AllEventsToUser AllEventsToUser[]
}

model AllEventsToUser {
  A          String
  B          String    @db.Uuid
  all_events AllEvents @relation(fields: [A], references: [event_id], onDelete: Cascade)
  User       User      @relation(fields: [B], references: [id], onDelete: Cascade)

  @@id([A, B], map: "_AllEventsToUser_AB_pkey")
  @@index([B], map: "_AllEventsToUser_B_index")
  @@map("_AllEventsToUser")
}

model ChatMessage {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sessionid   String      @db.Uuid
  sender      String
  content     String
  createdat   DateTime?   @default(now()) @db.Timestamp(6)
  ChatSession ChatSession @relation(fields: [sessionid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model ChatSession {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userid      String        @db.Uuid
  city        String
  childage    Int
  createdat   DateTime?     @default(now()) @db.Timestamp(6)
  ChatMessage ChatMessage[]
}

enum Role {
  ADMIN
  CUSTOMER
}
